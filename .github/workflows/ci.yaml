name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  msrv:
    name: Minimum supported Rust version
    runs-on: ubuntu-latest
    env:
      minrust: "1.67"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust ${{ env.minrust }}
        run: rustup default ${{ env.minrust }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        run: cargo check --all-features

  test:
    name: Test
    needs: [msrv]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        env:
          RUSTFLAGS: -D warnings
        run: cargo test --all-features

  clippy:
    name: Clippy
    needs: [msrv]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run clippy
        env:
          RUSTFLAGS: -D warnings
        run: cargo clippy --all-features --tests

  build-docs:
    name: Build docs
    needs: [msrv]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build docs
        env:
          RUSTDOCFLAGS: -D rustdoc::broken_intra_doc_links
        run: cargo doc --no-deps --all-features

  # cargo-deny:
  #   name: Lint dependencies
  #   needs: [msrv]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v3

  #     - name: Install cargo-deny
  #       uses: baptiste0928/cargo-install@v2
  #       with:
  #         crate: cargo-deny

  #     - name: Lint dependencies
  #       run: cargo-deny check bans licenses sources

  #     - name: Check security advisories
  #       run: cargo-deny check advisories
  #       continue-on-error: true  # Avoid sudden breakages

  rustfmt:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  codespell:
    name: Spelling
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Run Codespell
        uses: codespell-project/actions-codespell@master
